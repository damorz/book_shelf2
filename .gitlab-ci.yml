stages:
  - publish
  - deploy

# Publish to Cloud registry
docker-publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  before_script:
    # Install CA certs, openssl to https downloads, python for gcloud sdk
    - apk add --update make ca-certificates openssl python3
    - update-ca-certificates
    # Write our GCP service account private key into a file
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    # Download and install Google Cloud SDK
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud --quiet components update
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://us.gcr.io < ${HOME}/gcloud-service-key.json
  script:
    - docker build -t $IMAGE_NAME .
    - docker tag $IMAGE_NAME us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME
    - docker push us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:latest
  only:
    - main

# deploy to google cloud run
deploy_production:
  image: google/cloud-sdk:alpine
  stage: deploy
  environment: Production
  only:
  - main
  script:
  - echo $GCLOUD_SERVICE_KEY > /tmp/$CI_PIPELINE_ID.json
  - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
  - gcloud config set project solid-idiom-295016 
  - gcloud run deploy bookshelf --platform managed --image us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:latest --region us-central1


